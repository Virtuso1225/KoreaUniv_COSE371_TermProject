[{"/Users/chaseungmin/projects/database_term_project/frontend/src/index.tsx":"1","/Users/chaseungmin/projects/database_term_project/frontend/src/theme/FontStyle.ts":"2","/Users/chaseungmin/projects/database_term_project/frontend/src/App.tsx":"3","/Users/chaseungmin/projects/database_term_project/frontend/src/pages/Homepage.tsx":"4","/Users/chaseungmin/projects/database_term_project/frontend/src/pages/Hotplacepage.tsx":"5","/Users/chaseungmin/projects/database_term_project/frontend/src/pages/MypageMain.tsx":"6","/Users/chaseungmin/projects/database_term_project/frontend/src/pages/Reservationpage.tsx":"7","/Users/chaseungmin/projects/database_term_project/frontend/src/components/header/Header.tsx":"8","/Users/chaseungmin/projects/database_term_project/frontend/src/components/main/Main.tsx":"9","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageProfile.tsx":"10","/Users/chaseungmin/projects/database_term_project/frontend/src/components/hotplace/Hotplace.tsx":"11","/Users/chaseungmin/projects/database_term_project/frontend/src/components/reservation/Reservation.tsx":"12","/Users/chaseungmin/projects/database_term_project/frontend/src/components/header/HeaderStyle.tsx":"13","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageProfileStyle.tsx":"14","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypagePost.tsx":"15","/Users/chaseungmin/projects/database_term_project/frontend/src/components/main/MainStyle.tsx":"16","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageReview.tsx":"17","/Users/chaseungmin/projects/database_term_project/frontend/src/components/reservation/ReservationStyle.tsx":"18","/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/Post.tsx":"19","/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/PostInfo.tsx":"20","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageOption.tsx":"21","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypagePostStyle.tsx":"22","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageReviewStyle.tsx":"23","/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/PostStyle.tsx":"24","/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/PostInfoStyle.tsx":"25","/Users/chaseungmin/projects/database_term_project/frontend/src/components/modalpost/ModalPost.tsx":"26","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageOptionStyle.tsx":"27","/Users/chaseungmin/projects/database_term_project/frontend/src/components/newpost/Newpost.tsx":"28","/Users/chaseungmin/projects/database_term_project/frontend/src/components/newpost/NewpostStyle.tsx":"29","/Users/chaseungmin/projects/database_term_project/frontend/src/components/hotplace/HotplaceStyle.tsx":"30"},{"size":627,"mtime":1638704770048,"results":"31","hashOfConfig":"32"},{"size":1130,"mtime":1638548754362,"results":"33","hashOfConfig":"32"},{"size":649,"mtime":1638851532694,"results":"34","hashOfConfig":"32"},{"size":249,"mtime":1638608006518,"results":"35","hashOfConfig":"32"},{"size":263,"mtime":1638718576502,"results":"36","hashOfConfig":"32"},{"size":282,"mtime":1638683430030,"results":"37","hashOfConfig":"32"},{"size":291,"mtime":1638705818936,"results":"38","hashOfConfig":"32"},{"size":733,"mtime":1638813191843,"results":"39","hashOfConfig":"32"},{"size":1292,"mtime":1638851495418,"results":"40","hashOfConfig":"32"},{"size":3183,"mtime":1638852116323,"results":"41","hashOfConfig":"32"},{"size":1341,"mtime":1638824554442,"results":"42","hashOfConfig":"32"},{"size":2540,"mtime":1638819918858,"results":"43","hashOfConfig":"32"},{"size":1524,"mtime":1638813216739,"results":"44","hashOfConfig":"32"},{"size":1348,"mtime":1638685068547,"results":"45","hashOfConfig":"32"},{"size":1136,"mtime":1638821883610,"results":"46","hashOfConfig":"32"},{"size":408,"mtime":1638774530084,"results":"47","hashOfConfig":"32"},{"size":1661,"mtime":1638821965669,"results":"48","hashOfConfig":"32"},{"size":1377,"mtime":1638819498777,"results":"49","hashOfConfig":"32"},{"size":3570,"mtime":1638816403569,"results":"50","hashOfConfig":"32"},{"size":1602,"mtime":1638800760591,"results":"51","hashOfConfig":"32"},{"size":1371,"mtime":1638825193718,"results":"52","hashOfConfig":"32"},{"size":448,"mtime":1638700442478,"results":"53","hashOfConfig":"32"},{"size":952,"mtime":1638696357324,"results":"54","hashOfConfig":"32"},{"size":2304,"mtime":1638605148022,"results":"55","hashOfConfig":"32"},{"size":638,"mtime":1638605019277,"results":"56","hashOfConfig":"32"},{"size":2335,"mtime":1638813818634,"results":"57","hashOfConfig":"32"},{"size":608,"mtime":1638680290790,"results":"58","hashOfConfig":"32"},{"size":2174,"mtime":1638852920628,"results":"59","hashOfConfig":"32"},{"size":385,"mtime":1638776173311,"results":"60","hashOfConfig":"32"},{"size":893,"mtime":1638825137922,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"17ftcgo",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/chaseungmin/projects/database_term_project/frontend/src/index.tsx",[],["129","130","131","132","133"],"/Users/chaseungmin/projects/database_term_project/frontend/src/theme/FontStyle.ts",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/App.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/pages/Homepage.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/pages/Hotplacepage.tsx",["134"],"import React from 'react';\nimport Header from '../components/header/Header';\nimport Hotplace from '../components/hotplace/Hotplace';\n\nconst Hotplacepage = () => {\n  return (\n    <>\n      <Header />\n      <Hotplace />\n    </>\n  );\n};\n\nexport default Hotplacepage;\n","/Users/chaseungmin/projects/database_term_project/frontend/src/pages/MypageMain.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/pages/Reservationpage.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/header/Header.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/main/Main.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageProfile.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/hotplace/Hotplace.tsx",["135"],"/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { AiFillFire } from 'react-icons/ai';\nimport {\n  BackgroundWrapper,\n  Content,\n  HotplaceTag,\n  RowWrapper,\n  Title,\n} from './HotplaceStyle';\n\ninterface placeProps {\n  place_id: number;\n  place_name: string;\n  post_num: number;\n}\nconst Hotplace = () => {\n  const [places, setPlaces] = useState<placeProps[]>([]);\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/place')\n      .then((res) => res.json())\n      .then((data: placeProps[]) => {\n        setPlaces(data);\n      })\n      .then(() => {\n        setInit(true);\n      });\n  }, []);\n  return (\n    <BackgroundWrapper>\n      {init ? (\n        <>\n          {places.map((place) => (\n            <div key={place.place_id}>\n              {place.post_num ? (\n                <HotplaceTag>\n                  <RowWrapper>\n                    <AiFillFire size=\"20\" />\n                    <Title>{place.place_name}</Title>\n                  </RowWrapper>\n                  <Content>활용된 게시물 수: {place.post_num}</Content>\n                </HotplaceTag>\n              ) : (\n                ''\n              )}\n            </div>\n          ))}\n        </>\n      ) : (\n        ''\n      )}\n    </BackgroundWrapper>\n  );\n};\n\nexport default Hotplace;\n","/Users/chaseungmin/projects/database_term_project/frontend/src/components/reservation/Reservation.tsx",["136","137"],"/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Photographer } from '../post/PostInfo';\nimport {\n  PhotographerCareer,\n  PhotographerImg,\n  PhotographerInfo,\n  PhotographerName,\n} from '../post/PostInfoStyle';\nimport {\n  ReservationWrapper,\n  BackgroundWrapper,\n  DateSearchWrapper,\n  Text,\n  DateSearch,\n  AvailableWrapper,\n  Card,\n} from './ReservationStyle';\n\ninterface userProps {\n  id: string;\n  name: string;\n  area: string;\n  profile_img: string;\n  career: string;\n  gender: string;\n  type: string;\n}\n\nconst Reservation: React.FC = () => {\n  const [input, setInput] = useState('');\n  const [users, setUsers] = useState<userProps[]>([]);\n  const [init, setInit] = useState(false);\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value);\n    fetch(`http://localhost:3001/reserve/${e.target.value}`)\n      .then((res) => res.json())\n      .then((data: userProps[]) => {\n        setUsers(data);\n      })\n      .then(() => {\n        setInit(true);\n      });\n  };\n\n  return (\n    <BackgroundWrapper>\n      <ReservationWrapper>\n        <DateSearchWrapper>\n          <Text>날짜 검색하기</Text>\n          <DateSearch\n            placeholder=\"날짜 검색하기 (형식: 2021.11.02.)\"\n            onChange={onChange}\n            value={input}\n          />\n        </DateSearchWrapper>\n        {init ? (\n          <AvailableWrapper>\n            {users.map((user) => (\n              <Card key={user.id}>\n                <PhotographerImg src={user.profile_img} />\n                <PhotographerInfo>\n                  <Link to={`/${user.id}`} style={{ textDecoration: 'none' }}>\n                    <PhotographerName>\n                      {user.type === 'Photographer' ? '작가:' : '모델:'}{' '}\n                      {user.id}\n                    </PhotographerName>\n                  </Link>\n                  {user.type === 'Photographer' ? (\n                    <PhotographerCareer>\n                      경력: {user.career}~\n                    </PhotographerCareer>\n                  ) : (\n                    <PhotographerCareer>{user.gender} </PhotographerCareer>\n                  )}\n                  <PhotographerCareer>활동지역: {user.area}</PhotographerCareer>\n                </PhotographerInfo>\n              </Card>\n            ))}\n          </AvailableWrapper>\n        ) : (\n          ''\n        )}\n      </ReservationWrapper>\n    </BackgroundWrapper>\n  );\n};\n\nexport default Reservation;\n","/Users/chaseungmin/projects/database_term_project/frontend/src/components/header/HeaderStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageProfileStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypagePost.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/main/MainStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageReview.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/reservation/ReservationStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/Post.tsx",["138","139","140","141"],"/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdPlace } from 'react-icons/md';\nimport { BsCalendarDate } from 'react-icons/bs';\nimport { AiFillCamera } from 'react-icons/ai';\nimport {\n  ColumnWrapper,\n  PhotographerCard,\n  PlaceTitle,\n  PostCard,\n  PostCommentCard,\n  PostCommentHeader,\n  PostContentWrapper,\n  PostHeader,\n  PostImg,\n  PostTitle,\n  RowWrapper,\n  UserImg,\n  UserName,\n  ModelCard,\n} from './PostStyle';\nimport { Photographer, Model } from './PostInfo';\nimport profile from '../../assets/img/profile.jpg';\n\ninterface postProps {\n  post_id: number;\n  writer_id: string;\n  title: string;\n  content: string;\n  picture: string;\n  timestamp: Date;\n  date: string;\n  m_id: string;\n  m_name: string;\n  m_area: string;\n  m_gender: string;\n  m_img: string;\n  p_id: string;\n  p_name: string;\n  p_area: string;\n  p_career: string;\n  p_img: string;\n  place_name: string;\n  camera_name: string;\n}\n\ninterface writerProps {\n  w_id: string;\n  w_img: string;\n  w_name: string;\n}\n\ninterface modelProps {\n  m_id: string;\n  m_name: string;\n  m_area: string;\n  m_gender: string;\n  m_img: string;\n}\n\ninterface photographerProps {\n  p_id: string;\n  p_name: string;\n  p_area: string;\n  p_career: string;\n  p_img: string;\n}\n\nconst Post: React.FC<postProps> = ({\n  post_id,\n  writer_id,\n  title,\n  content,\n  picture,\n  timestamp,\n  date,\n  m_id,\n  m_name,\n  m_area,\n  m_gender,\n  m_img,\n  p_id,\n  p_name,\n  p_area,\n  p_career,\n  p_img,\n  place_name,\n  camera_name,\n}: postProps) => {\n  const [writer, setWriter] = useState<writerProps>();\n  const [model, setModel] = useState<modelProps>();\n  const [photographer, setPhotographer] = useState<photographerProps>();\n\n  const initWriter = () => {\n    if (writer_id === p_id) {\n      setWriter({ w_id: p_id, w_img: p_img, w_name: p_name });\n    } else {\n      setWriter({ w_id: m_id, w_img: m_img, w_name: m_name });\n    }\n  };\n\n  const initModel = () => {\n    setModel({ m_id, m_name, m_area, m_gender, m_img });\n  };\n\n  const initPhotographer = () => {\n    setPhotographer({ p_id, p_name, p_area, p_career, p_img });\n  };\n  useEffect(() => {\n    initWriter();\n    initModel();\n    initPhotographer();\n  }, []);\n  return (\n    <>\n      <PostCard>\n        <PostHeader>\n          <UserImg src={writer?.w_img} />\n          <Link to={`/${writer?.w_id}`} style={{ textDecoration: 'none' }}>\n            <UserName>{writer?.w_id}</UserName>\n          </Link>\n        </PostHeader>\n        <PostImg src={picture} />\n      </PostCard>\n      <PostCommentCard>\n        <PostCommentHeader>\n          <Link to={`/${writer?.w_id}`} style={{ textDecoration: 'none' }}>\n            <UserName>{writer?.w_id}</UserName>\n          </Link>\n          <PostTitle>{title}</PostTitle>\n        </PostCommentHeader>\n        <PostContentWrapper>\n          <RowWrapper>\n            <MdPlace size=\"20\" />\n            <PlaceTitle>{place_name}</PlaceTitle>\n          </RowWrapper>\n          <RowWrapper>\n            <BsCalendarDate size=\"20\" />\n            <PlaceTitle>{date}</PlaceTitle>\n          </RowWrapper>\n          <RowWrapper>\n            <AiFillCamera size=\"20\" />\n            <PlaceTitle>{camera_name}</PlaceTitle>\n          </RowWrapper>\n        </PostContentWrapper>\n      </PostCommentCard>\n      <ColumnWrapper>\n        <PhotographerCard>\n          {photographer ? <Photographer {...photographer} /> : ''}\n        </PhotographerCard>\n        <ModelCard>{model ? <Model {...model} /> : ''}</ModelCard>\n      </ColumnWrapper>\n    </>\n  );\n};\n\nexport default Post;\n","/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/PostInfo.tsx",["142","143","144"],"/* eslint-disable camelcase */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  PhotographerCareer,\n  PhotographerImg,\n  PhotographerInfo,\n  PhotographerName,\n} from './PostInfoStyle';\nimport PhotographerProfile from '../../assets/img/profile.jpg';\n\ninterface modelProps {\n  m_id: string;\n  m_name: string;\n  m_area: string;\n  m_gender: string;\n  m_img: string;\n}\n\ninterface photographerProps {\n  p_id: string;\n  p_name: string;\n  p_area: string;\n  p_career: string;\n  p_img: string;\n}\n\nconst Photographer: React.FC<photographerProps> = ({\n  p_id,\n  p_name,\n  p_area,\n  p_career,\n  p_img,\n}: photographerProps) => {\n  return (\n    <>\n      <PhotographerImg src={p_img} />\n      <PhotographerInfo>\n        <Link to={`/${p_id}`} style={{ textDecoration: 'none' }}>\n          <PhotographerName>작가: {p_id}</PhotographerName>\n        </Link>\n        <PhotographerCareer>경력: {p_career}~</PhotographerCareer>\n        <PhotographerCareer>활동지역: {p_area}</PhotographerCareer>\n      </PhotographerInfo>\n    </>\n  );\n};\n\nconst Model: React.FC<modelProps> = ({\n  m_id,\n  m_name,\n  m_area,\n  m_gender,\n  m_img,\n}: modelProps) => {\n  return (\n    <>\n      <PhotographerImg src={m_img} />\n      <PhotographerInfo>\n        <Link to={`/${m_id}`} style={{ textDecoration: 'none' }}>\n          <PhotographerName>모델: {m_id}</PhotographerName>\n        </Link>\n        <PhotographerCareer>성별: {m_gender}</PhotographerCareer>\n        <PhotographerCareer>활동지역: {m_area}</PhotographerCareer>\n      </PhotographerInfo>\n    </>\n  );\n};\nexport { Photographer, Model };\n","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageOption.tsx",["145"],"import React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { ButtonLink, ButtonsWrapper } from './MypageOptionStyle';\n\ninterface userType {\n  type: string;\n}\n\nconst MypageOption: React.FC = () => {\n  const location = useLocation();\n  const current = location.pathname;\n  const params = useParams();\n  const user = params.user_id;\n  const [isPost, setIsPost] = useState(false);\n  const [isReview, setIsReview] = useState(false);\n  const [userType, setUserType] = useState<userType[]>([]);\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    switch (current) {\n      case `/${user}/review`:\n        setIsReview(true);\n        break;\n      default:\n        setIsPost(true);\n    }\n    fetch(`http://localhost:3001/type/${user}`)\n      .then((res) => res.json())\n      .then((data: userType[]) => {\n        console.log(data);\n        setUserType(data);\n      })\n      .then(() => {\n        setInit(true);\n      });\n  }, []);\n  return (\n    <ButtonsWrapper>\n      <ButtonLink to={`/${user}`} isSelected={isPost}>\n        게시물\n      </ButtonLink>\n      {init && userType[0].type === 'Photographer' ? (\n        <ButtonLink to={`/${user}/review`} isSelected={isReview}>\n          리뷰\n        </ButtonLink>\n      ) : (\n        ''\n      )}\n    </ButtonsWrapper>\n  );\n};\n\nexport default MypageOption;\n","/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypagePostStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageReviewStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/PostStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/post/PostInfoStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/modalpost/ModalPost.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/mypage/MypageOptionStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/newpost/Newpost.tsx",["146","147","148","149","150","151"],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/newpost/NewpostStyle.tsx",[],"/Users/chaseungmin/projects/database_term_project/frontend/src/components/hotplace/HotplaceStyle.tsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":5,"column":22,"nodeType":"164","messageId":"165","endLine":5,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":17,"column":18,"nodeType":"164","messageId":"165","endLine":17,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":2,"column":17,"nodeType":"168","messageId":"169","endLine":2,"endColumn":26},{"ruleId":"166","severity":1,"message":"170","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":22},{"ruleId":"166","severity":1,"message":"171","line":24,"column":8,"nodeType":"168","messageId":"169","endLine":24,"endColumn":15},{"ruleId":"166","severity":1,"message":"172","line":71,"column":3,"nodeType":"168","messageId":"169","endLine":71,"endColumn":10},{"ruleId":"166","severity":1,"message":"173","line":74,"column":3,"nodeType":"168","messageId":"169","endLine":74,"endColumn":10},{"ruleId":"166","severity":1,"message":"174","line":76,"column":3,"nodeType":"168","messageId":"169","endLine":76,"endColumn":12},{"ruleId":"166","severity":1,"message":"175","line":10,"column":8,"nodeType":"168","messageId":"169","endLine":10,"endColumn":27},{"ruleId":"166","severity":1,"message":"176","line":30,"column":3,"nodeType":"168","messageId":"169","endLine":30,"endColumn":9},{"ruleId":"166","severity":1,"message":"177","line":51,"column":3,"nodeType":"168","messageId":"169","endLine":51,"endColumn":9},{"ruleId":"178","severity":1,"message":"179","line":29,"column":9,"nodeType":"180","messageId":"181","endLine":29,"endColumn":20},{"ruleId":"166","severity":1,"message":"182","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":23},{"ruleId":"166","severity":1,"message":"183","line":2,"column":19,"nodeType":"168","messageId":"169","endLine":2,"endColumn":32},{"ruleId":"166","severity":1,"message":"184","line":21,"column":11,"nodeType":"168","messageId":"169","endLine":21,"endColumn":19},{"ruleId":"166","severity":1,"message":"185","line":24,"column":10,"nodeType":"168","messageId":"169","endLine":24,"endColumn":14},{"ruleId":"166","severity":1,"message":"186","line":24,"column":16,"nodeType":"168","messageId":"169","endLine":24,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":27,"column":5,"nodeType":"180","messageId":"181","endLine":27,"endColumn":16},"lines-around-directive",["187"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Photographer' is defined but never used.","'profile' is defined but never used.","'post_id' is defined but never used.","'content' is defined but never used.","'timestamp' is defined but never used.","'PhotographerProfile' is defined but never used.","'p_name' is defined but never used.","'m_name' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'useRef' is defined but never used.","'SubmitHandler' is defined but never used.","'register' is assigned a value but never used.","'init' is assigned a value but never used.","'setInit' is assigned a value but never used.","padding-line-between-statements"]